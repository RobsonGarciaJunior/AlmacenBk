DROP DATABASE GESTIONPEDIDOS;
CREATE DATABASE IF NOT EXISTS GESTIONPEDIDOS;
USE GESTIONPEDIDOS;

-- TABLA USUARIO
CREATE TABLE USUARIO (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL VARCHAR(50),
    NOMBRE VARCHAR(50),
    APELLIDO VARCHAR(50),
    FOTO VARCHAR(255),
    HABILITADO BOOLEAN,
    CONTRASENNA VARCHAR(100),
    TIPO_USUARIO VARCHAR(50)
);

-- TABLA PRODUCTO
CREATE TABLE PRODUCTO (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(100),
    FOTO VARCHAR(255),
    HABILITADO BOOLEAN
);

-- TABLA ALMACEN
CREATE TABLE ALMACEN (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(100),
    DIRECCION VARCHAR(255)
);

-- RELACIÓN ENTRE PRODUCTO Y ALMACEN
CREATE TABLE ALMACENPRODUCTO (
    ALMACEN_ID INT,
    PRODUCTO_ID INT,
    CANTIDAD INT,
    CANTIDADMIN INT,
    PRIMARY KEY (ALMACEN_ID, PRODUCTO_ID),
    FOREIGN KEY (ALMACEN_ID) REFERENCES ALMACEN(ID),
    FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO(ID)
);

-- TABLA PEDIDO
CREATE TABLE PEDIDO (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE_RAZON_SOCIAL VARCHAR(100),
    CIF_NIF VARCHAR(20),
    IMPORTE DECIMAL(10,2),
    PAGADO BOOLEAN,
    FECHA_EMISION DATE,
    FECHA_ENTREGA DATE
);

-- TABLA INTERMEDIA PRODUCTOPEDIDO PARA SABER QUÉ PRODUCTOS ESTÁN EN CADA PEDIDO Y EN QUÉ CANTIDAD
CREATE TABLE PRODUCTOPEDIDO (
    PEDIDO_ID INT,
    PRODUCTO_ID INT,
    CANTIDAD INT,
    PRIMARY KEY (PEDIDO_ID, PRODUCTO_ID),
    FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDO(ID),
    FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO(ID)
);

-- RELACIÓN ENTRE PRODUCTO Y USUARIO (USUARIO QUE LO GESTIONA)
CREATE TABLE GESTIONPRODUCTO (
    PRODUCTO_ID INT PRIMARY KEY,
    USUARIO_ID INT,
    FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO(ID),
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID)
);

-- RELACIÓN ENTRE PEDIDO Y USUARIO (USUARIO QUE LO GESTIONA)
CREATE TABLE GESTIONPEDIDO (
    PEDIDO_ID INT PRIMARY KEY,
    USUARIO_ID INT,
    FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDO(ID),
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID)
);
